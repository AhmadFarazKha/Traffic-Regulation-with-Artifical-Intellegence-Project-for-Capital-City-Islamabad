# -*- coding: utf-8 -*-
"""traffic_regulation_with_artifical_intellegence_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/AhmadFarazKha/bcf94cb230774ac433b16fb416a58f6b/traffic_regulation_with_artifical_intellegence_project.ipynb

**Traffic Regulation with Artifical Intellegence Project**
"""

# prompt: Traffic_Regulation_with_Artifical_Intellegence_Project python for islamabad roads with overspeeding (alert,fines,tracement via number plate etc)

import random

def simulate_traffic_monitoring(vehicle_data):
    """
    Simulates traffic monitoring for Islamabad roads, identifying overspeeding vehicles.

    Args:
        vehicle_data: A list of dictionaries, where each dictionary represents a vehicle
                      and contains 'number_plate', 'speed', and 'location' keys.
    """

    for vehicle in vehicle_data:
        number_plate = vehicle['number_plate']
        speed = vehicle['speed']
        location = vehicle['location']
        speed_limit = 60  # Default speed limit in Islamabad (adjust as needed)

        if speed > speed_limit:
            fine_amount = (speed - speed_limit) * 5  # Example fine calculation
            print(f"Vehicle {number_plate} detected overspeeding at {location} "
                  f"(Speed: {speed} km/h, Limit: {speed_limit} km/h). "
                  f"Fine: {fine_amount} PKR")
            # Here you would integrate with a database or system to log the fine
            # and potentially send alerts or initiate further actions.
            # Example:  log_traffic_violation(number_plate, speed, location, fine_amount)

        else:
            print(f"Vehicle {number_plate} at {location} within speed limit.")


# Example usage with simulated vehicle data:
vehicle_data = [
    {'number_plate': 'ABC-123', 'speed': 70, 'location': 'F-6'},
    {'number_plate': 'XYZ-789', 'speed': 55, 'location': 'G-8'},
    {'number_plate': 'DEF-456', 'speed': 85, 'location': 'I-8'},
    {'number_plate': 'GHI-012', 'speed': 40, 'location': 'E-7'},
]

simulate_traffic_monitoring(vehicle_data)



#Placeholder for further development
def log_traffic_violation(number_plate, speed, location, fine_amount):
    print(f"Logging violation for {number_plate} to database...") # Simulated Logging
    #In a real system, this would connect to a database or storage system
    pass


def trace_vehicle(number_plate):
    print(f"Tracing vehicle {number_plate}....") # Simulated tracing
    #in real implementation this can use GPS data or other tracking methods
    pass